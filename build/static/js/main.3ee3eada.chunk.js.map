{"version":3,"sources":["header.jsx","form.jsx","footer.jsx","results.jsx","App.jsx","index.js"],"names":["Header","Main","handlerForm","e","a","preventDefault","target","method","value","fetch","url","raw","json","data","props","handler","results","count","headers","Error","onSubmit","this","htmlFor","type","id","required","name","React","Component","Footer","Results","Fragment","console","log","Response","App","setState","Headers","state","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAUeA,EARA,WACX,OACI,iCACI,0C,uBCoCGC,G,kNAlCXC,Y,uCAAc,WAAMC,GAAN,iBAAAC,EAAA,yDACVD,EAAEE,iBACmB,QAA1BF,EAAEG,OAAOC,OAAOC,MAFD,iCAGEC,MAAMN,EAAEG,OAAOI,IAAIF,OAHrB,cAGVG,EAHU,gBAIGA,EAAIC,OAJP,OAIVC,EAJU,OAKd,EAAKC,MAAMC,QAAQF,EAAKG,QAASH,EAAKI,MAAON,EAAIO,SALnC,8BAOR,IAAIC,MAAM,2CAPF,4C,kGAUlB,WACI,OACJ,+BACI,uBAAMC,SAAUC,KAAKnB,YAArB,UACA,uBAAOoB,QAAQ,MAAf,kBACA,uBAAOC,KAAK,MAAMC,GAAG,MAAMC,UAAQ,IACnC,wBAAQF,KAAK,SAAb,iBACA,uBAAOA,KAAK,QAAQC,GAAG,MAAMhB,MAAM,MAAMkB,KAAK,SAAUD,UAAQ,IAChE,uBAAOH,QAAQ,MAAf,iBACA,uBAAOC,KAAK,QAAQC,GAAG,OAAOhB,MAAM,OAAOkB,KAAK,SAASD,UAAQ,IACjE,uBAAOH,QAAQ,OAAf,kBACA,uBAAOC,KAAK,QAAQC,GAAG,MAAMhB,MAAM,MAAMkB,KAAK,SAASD,UAAQ,IAC/D,uBAAOH,QAAQ,MAAf,iBACA,uBAAOC,KAAK,QAAQC,GAAG,SAAShB,MAAM,SAASkB,KAAK,SAASD,UAAQ,IACrE,uBAAOH,QAAQ,SAAf,6B,GA1BeK,IAAMC,YCKVC,G,MARA,WACX,OACG,iCACI,4D,iBCiBIC,E,4JAlBX,WACA,OACI,cAAC,IAAMC,SAAP,UACI,8BACKC,QAAQC,IAAI,aAAcZ,KAAKP,OAC/BO,KAAKP,MAAME,QAAQkB,SAAW,cAAC,IAAD,CAAYV,GAAG,cAAcX,KAAMQ,KAAKP,MAAME,UAA0B,c,GANjGW,IAAMC,WCgCbO,E,kDA1Bb,WAAYrB,GAAQ,IAAD,8BACjB,cAAMA,IAIRZ,YAAc,SAAEc,EAASC,GAExB,EAAKmB,SAAS,CAACC,QAAQ,CAAC,eAAgB,oBAAoBH,SAAS,CAACjB,MAAMA,EAAMD,QAAQA,MALzF,EAAKsB,MAAQ,GAFI,E,0CAWnB,WACE,OACC,eAAC,IAAMP,SAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAOhB,QAASM,KAAKnB,cACrB,cAAC,EAAD,CAASc,QAASK,KAAKiB,QACvB,cAAC,EAAD,W,GAlBWX,IAAMC,WCHxBW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3ee3eada.chunk.js","sourcesContent":["import './header.scss';\n\nconst Header = ()=>{\n    return (\n        <header>\n            <h1>RESTy</h1>\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport './form.scss';\n\n\n\nclass Main extends React.Component {\n    \n    handlerForm = async e =>{\n        e.preventDefault();\nif(e.target.method.value === 'get'){\n    let raw = await fetch(e.target.url.value);\n    let data = await raw.json(); \n    this.props.handler(data.results, data.count, raw.headers)\n} else {\n    throw new Error('This feature is not available currently');\n}\n    }\nrender() {\n    return (\n<main>\n    <form onSubmit={this.handlerForm}>\n    <label htmlFor=\"url\">URL:</label>\n    <input type=\"url\" id=\"url\" required/>\n    <button type=\"submit\">GO!</button>\n    <input type=\"radio\" id=\"get\" value=\"get\" name=\"method\"  required/>\n    <label htmlFor=\"get\">get</label>\n    <input type=\"radio\" id=\"post\" value=\"post\" name=\"method\" required/>\n    <label htmlFor=\"post\">post</label>\n    <input type=\"radio\" id=\"put\" value=\"put\" name=\"method\" required/>\n    <label htmlFor=\"put\">put</label>\n    <input type=\"radio\" id=\"delete\" value=\"delete\" name=\"method\" required/>\n    <label htmlFor=\"delete\">delete</label>\n\n    </form>\n    {/* <p>{`${this.state.Data}      ${this.state.URL}`}</p> */}\n    </main>\n    )\n}\n\n}\n\nexport default Main;","import './footer.scss';\n\nconst Footer = ()=>{\n    return (\n       <footer>\n           <h4>&copy; 2021 Code Fellows</h4>\n       </footer>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport JSONPretty from 'react-json-pretty';\n\nclass Results extends React.Component {\n    render(){\n    return(\n        <React.Fragment>\n            <p>\n                {console.log('this.props', this.props)}\n                {this.props.results.Response?( <JSONPretty id=\"json-pretty\" data={this.props.results}></JSONPretty> ): null }\n               \n                \n                   \n                \n\n            </p> \n            \n        </React.Fragment>\n    )\n    }  \n}\n\nexport default Results;","import './App.scss';\nimport React from 'react'\nimport Header from './header';\nimport Form from './form';\nimport Footer from './footer';\nimport Results from './results';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n    }\n  }\n  handlerForm = ( results, count) =>{\n   \n   this.setState({Headers:{'Content-Type': 'application/json'},Response:{count:count,results:results}})\n  }\n\n\n  render() {\n    return (\n     <React.Fragment>\n       <Header />\n       <Form  handler={this.handlerForm}/>\n       <Results results={this.state} />\n       <Footer />\n     </React.Fragment>\n    );\n  }\n}\n\n// function App() {\n// }\n\nexport default App;\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}